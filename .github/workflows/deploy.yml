name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm run test:run
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build application for e2e tests  
      run: npm run build
    
    - name: Run Playwright tests
      run: npm run test:e2e
      timeout-minutes: 25
      env:
        CI: true
        PWDEBUG: 0
        DEBUG: pw:api
      continue-on-error: false
      
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report-${{ github.run_number }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30
        
    - name: Upload Playwright traces and screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-traces-${{ github.run_number }}
        path: |
          test-results/**/trace.zip
          test-results/**/*.png
          test-results/**/*.webm
        retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: test  # Only build if tests pass
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
